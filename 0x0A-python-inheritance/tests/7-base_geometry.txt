The testing the module integer validator
=================================================

Using the class ``BaseGeometry``
-------------------------------------------------

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

    >>> bg = BaseGeometry()

    >>> bg.integer_validator("width", 9)

    >>> bg.integer_validator("height", 3)

    >>> bg.integer_validator("", 2)

    >>> bg.integer_validator("height", 3.6)
    Traceback (most recent call last):
    ...
    TypeError: height must be an integer

    >>> bg.integer_validator("width", "hello")
    Traceback (most recent call last):
    ...
    TypeError: width must be an integer

    >>> bg.integer_validator("square", [11])
    Traceback (most recent call last):
    ...
    TypeError: square must be an integer


    >>> bg.integer_validator("random name", 1)

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -12)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

    >>> bg.integer_validator("my_int", (1, 9))
    Traceback (most recent call last):
    ...
    TypeError: my_int must be an integer

    >>> bg.integer_validator(3)
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("hello")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("age", 33, 23)
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    >>> bg.newarea()
    Traceback (most recent call last):
    ...
    AttributeError: 'BaseGeometry' object has no attribute 'newarea'
